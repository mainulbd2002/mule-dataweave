<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="18081" doc:name="HTTP Listener Configuration"/>
    <flow name="test-dataweaveFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/data" doc:name="HTTP"/>
        <set-payload doc:name="Set Payload" value="{
&quot;aa&quot;: &quot;Mr. X&quot;,
&quot;ab&quot;: &quot;12345&quot;,
&quot;ba&quot;: &quot;Mr. Y&quot;,
&quot;bb&quot;: &quot;56789&quot;
}"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="ce6f1f4b-7ce9-4190-b71b-5dbad4b872be">
            <dw:input-payload doc:sample="sample1.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	addr: [{
		a: payload.aa,
		b: payload.ab
	},
	{
		a: payload.ba,
		b: payload.bb
	}
	]
	
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <sub-flow name="test-dataweavemaptest">
        <dw:transform-message doc:name="Transform Message" metadata:id="7cc1245e-e7f1-4e95-b299-dcf7cbf8fb9d">
            <dw:input-payload doc:sample="mapTest.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	users: payload.users map ((name, nameIdx) -> 
		user: {
			idx: nameIdx,
			str: upper name
		}
	)
}]]></dw:set-payload>
        </dw:transform-message>
    </sub-flow>
    <flow name="test-dataweaveMapasObjectFlow">
        <dw:transform-message doc:name="Transform Message" metadata:id="db31f399-9950-46db-bed3-f7aa7ed42f07">
            <dw:input-payload doc:sample="mapObject.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var conversionRate=13.45
---
priceList: payload.prices map (
	'$$': {
		dollers: $,
		localcurrency: $ * conversionRate
	}
)]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="test-dataweavepluck">
        <dw:transform-message doc:name="Transform Message" metadata:id="e0633f28-69c3-4783-a1bb-b57ab7bd38e0">
            <dw:input-payload doc:sample="pluckexample.xml" mimeType="application/xml"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
result: {
	keys: payload.prices pluck $$,
	values: payload.prices pluck $
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="test-dataweaveFilter">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  biggerThanTwo: [0, 1, 2, 3, 4, 5, 6] filter ($$ mod 2) ==1
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="test-dataweaveReduce">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
summerValue: [1, 2, 3, 4, 5] reduce ($$ *$)
]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="test-dataweavecomplexFilter">
        <dw:transform-message doc:name="Transform Message" metadata:id="a22a7dd9-1d7c-46f7-a907-3541fdb80612">
            <dw:input-payload doc:sample="complexFilter.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	id: payload.id,
	courseTitle: payload.courseTitle,
	optionGroup: payload.optionGroups map ((grp) ->
		{
			id: grp.id,
			courseType: grp.courseType,
			options: grp.options filter $.studyMode != 'PT'
		}
	) filter (sizeOf $.options) > 0
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="test-dataweaveTransformChildren">
        <dw:transform-message doc:name="Transform Message" metadata:id="92ea25a8-e78f-42b8-a348-36c9d060b8a4">
            <dw:input-payload doc:sample="child1.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload.dependents map ((data, dataIdx) -> {
	customer_id: payload.customer_id,
	dependent_id: data.dependent_id,
	gender: data.gender,
	pii: data.pii
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
